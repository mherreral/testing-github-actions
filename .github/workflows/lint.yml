name: syntax checker
on: pull_request
env:
  tf_version: "latest"
  tg_version: "latest"
  tf_working_dir: "."

jobs:
  run-linters:
    runs-on: ubuntu-latest
    steps:
      - name: checkout-repo
        uses: actions/checkout@v3

      # Docker linter
      - name: run hadolint
        if: always()
        id: run-hadolint
        uses: hadolint/hadolint-action@v3.0.0
        with:
          recursive: true

      # Terragrunt linter
      - name: run terragrunt format check
        id: run-hclfmt
        if: always()
        uses: nayyara-cropsey/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_subcommand: hclfmt
          tf_actions_comment: false

      # Bash linter
      - name: run shfmt linter
        id: run-shfmt
        if: always()
        uses: luizm/action-sh-checker@master
        with:
          sh_checker_shellcheck_disable: true

      # Yaml linter
      - name: run yaml linter
        id: run-yamllint
        if: always()
        uses: ibiqlik/action-yamllint@v3
        with:
          config_file: .yamllint

      # Safety check pending
      # Docker scan
      - name: Build the agnostic container image
        id: build-agmostic-cont
        if: always()
        run: docker build . --file Dockerfile --tag localbuild/agnostic_cont:latest

      - name: scan docker image
        if: always()
        id: scan-agnostic-image
        uses: anchore/scan-action@v3

      # Comment pr with failures
      # - name: make comment
      #   if: failure() && steps.run-hadolint.outcome != 'success'
      #   uses: peter-evans/find-comment@v2
      #   with:
      #     issue-number: ${{ github.event.pull_request.number }}
      #     body: |
      #     Hadolint errors: $HADOLINT_RESULTS
      #     Terragrunt errors: uwu

      # - name: print-info
      #   if: failure() || steps.run-hadolint.outcome != 'success' || steps.run-hclfmt.outcome != 'success' || steps.run-shfmt.outcome != 'success' || steps.run-yamllint.outcome != 'success'
      #   run: |
      #     echo "hadolint errors: $HADOLINT_RESULTS"
      #     echo "errors: $STEPS_CONTEXT"
    # - name: Update Pull Request
    #   uses: actions/github-script@v6
    #   if: github.event_name == 'pull_request'
    #   with:
    #     script: |
    #       const output = `
    #       #### Hadolint: \`${{ steps.hadolint.outcome }}\`
    #       \`\`\`
    #       ${process.env.HADOLINT_RESULTS}
    #       \`\`\`
    #       `;

    #       github.rest.issues.createComment({
    #         issue_number: context.issue.number,
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: output
    #       })
